omit = c("Agriculture", "Examination", "Catholic", "Infant.Mortality", "CatholicDummy"),
add.lines = list(c("Model", "Linear", "Quadratic", "Cubic", "Full", "w/o Exam.", "Dummy", "Dummy Full")),
omit.stat = c("rsq", "f", "ser"),
notes = "SE provided in parantheses",
results = "asis")
stargazer(reg_simple, reg_simple2, reg_simple3, reg_full, reg_woEx, reg_simple_Dummy, reg_woEx_Dummy,
type = "html",
out = "RegressionTableShort.html",
digits = 3,
header = FALSE,
align = TRUE,
no.space = TRUE,
title = "Regression Analysis of Education on Fertility",
intercept.bottom = FALSE,
dep.var.caption = "Impact on Fertility (in %)",
dep.var.labels.include = FALSE,
covariate.labels = c("Constant", "Education", "Education<sup>2</sup>", "Education<sup>3</sup>", "Agriculture", "Examination", "Catholic", "Infant.Mortality", "CatholicDummy"),
column.labels = c("Simple", "Multivariate"),
column.separate = c(3, 4),
omit = c("Agriculture", "Examination", "Catholic", "Infant.Mortality", "CatholicDummy"),
add.lines = list(c("Model", "Linear", "Quadratic", "Cubic", "Full", "w/o Exam.", "Dummy", "Dummy Full")),
omit.stat = c("rsq", "f", "ser"),
notes = "SE provided in parantheses",
results = "asis")
stargazer(reg_simple, reg_simple2, reg_simple3, reg_full, reg_woEx, reg_simple_Dummy, reg_woEx_Dummy,
type = "html",
out = "RegressionTable2.html",
digits = 3,
header = FALSE,
align = TRUE,
no.space = TRUE,
title = "Regression Analysis",
dep.var.caption = "Dependent Variable: Fertility",
intercept.bottom = FALSE,
dep.var.labels.include = FALSE,
covariate.labels = c("Constant", "Education", "Education<sup>2</sup>", "Education<sup>3</sup>", "Agriculture", "Examination", "Catholic", "Infant.Mortality", "CatholicDummy"),
column.labels = c("Simple", "Multivariate"),
column.separate = c(3, 4),
omit.stat = c("f","ser"),
column.sep.width= "12",
add.lines = list(c("Model", "Linear", "Quadratic", "Cubic", "Full", "w/o Exam.", "Dummy", "Dummy Full")),
notes = "SE provided in parantheses")
stargazer(reg_simple, reg_simple2, reg_simple3, reg_full, reg_woEx, reg_simple_Dummy, reg_woEx_Dummy,
type = "html",
out = "RegressionTable2.html",
digits = 3,
header = FALSE,
align = TRUE,
no.space = TRUE,
title = "Regression Analysis",
dep.var.caption = "Dependent Variable: Fertility",
intercept.bottom = FALSE,
dep.var.labels.include = FALSE,
covariate.labels = c("Constant", "Education", "Education<sup>2</sup>", "Education<sup>3</sup>", "Agriculture", "Examination", "Catholic", "Infant.Mortality", "CatholicDummy"),
column.labels = c("Simple", "Multivariate"),
column.separate = c(3, 4),
column.sep.width= "12",
add.lines = list(c("Model", "Linear", "Quadratic", "Cubic", "Full", "w/o Exam.", "Dummy", "Dummy Full")),
notes = "SE provided in parantheses")
library(datasets.load)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(lattice)
library(plotly)
library(knitr)
library(MASS)
library(faraway)
library(moments)
library(stargazer)
library(leaps)
library(glmnet)
library(np)
library(lmtest)
library(mctest)
library(faraway)
library(lattice)
library(olsrr)
library(corrplot)
library(GGally)
library(ggcorrplot)
help(swiss)
View(swiss)
mydata = swiss[, 1:6]
View(mydata)
attach(mydata)
boxplot(mydata, ylab = "Frequency", main = "Boxplot of the Swiss Fertility data set")
plot(density(Fertility), main = "Fertility", xlab = "Fertility")
rug(Fertility)
hist(Fertility, fill = "transparent", freq = F, add = T)
ggplot(mydata, aes(x = Fertility)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "white") +
geom_density(alpha = .2, fill = "#FF6666")
ggplot(mydata, aes(x = Fertility)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "white") +
geom_density(alpha = .2, fill = "blue")
ggplot(mydata, aes(x = Fertility)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "white") +
geom_density(alpha = .2, fill = "blue") +
geom_vline(aes(xintercept = mean(Fertility)),
color = "red", linetype = "dashed", size = 1)
ggplot(mydata, aes(x = Fertility)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "blue") +
geom_density(alpha = .2, fill = "blue") +
geom_vline(aes(xintercept = mean(Fertility)),
color = "red", linetype = "dashed", size = 1)
ggplot(mydata, aes(x = Fertility)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "lightblue") +
geom_density(alpha = .2, fill = "blue") +
geom_vline(aes(xintercept = mean(Fertility)),
color = "red", linetype = "dashed", size = 1)
ggplot(mydata, aes(x = Fertility)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "lightblue") +
geom_density(alpha = .2, fill = "blue") +
geom_vline(aes(xintercept = mean(Fertility)),
color = "lightred", linetype = "dashed", size = 1)
ggplot(mydata, aes(x = Fertility)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "lightblue") +
geom_density(alpha = .2, fill = "blue") +
geom_vline(aes(xintercept = mean(Fertility)),
color = "red", linetype = "dashed", size = 1)
ggplot(mydata, aes(x = Fertility)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "lightblue") +
geom_density(alpha = .2, fill = "blue") +
geom_vline(aes(xintercept = mean(Fertility)),
color = "red", linetype = "dashed", size = 1) +
labs(title = "Fertility histogram plot", xlab = "Fertility", ylab = "Density")
ggplot(mydata, aes(x = Fertility)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "grey") +
geom_density(alpha = .2, fill = "lightgrey") +
geom_vline(aes(xintercept = mean(Fertility)),
color = "red", linetype = "dashed", size = 1) +
labs(title = "Fertility histogram plot", xlab = "Fertility", ylab = "Density")
ggplot(mydata, aes(x = Fertility)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "grey", binwidth = 5) +
geom_density(alpha = .2, fill = "lightgrey") +
geom_vline(aes(xintercept = mean(Fertility)),
color = "red", linetype = "dashed", size = 1) +
labs(title = "Fertility histogram plot", xlab = "Fertility", ylab = "Density")
ggplot(mydata, aes(x = Fertility)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "grey", binwidth = 10) +
geom_density(alpha = .2, fill = "lightgrey") +
geom_vline(aes(xintercept = mean(Fertility)),
color = "red", linetype = "dashed", size = 1) +
labs(title = "Fertility histogram plot", xlab = "Fertility", ylab = "Density")
ggplot(mydata, aes(x = Fertility)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "grey", binwidth = 5) +
geom_density(alpha = .2, fill = "lightgrey") +
geom_vline(aes(xintercept = mean(Fertility)),
color = "red", linetype = "dashed", size = 1) +
labs(title = "Fertility histogram plot", xlab = "Fertility", ylab = "Density")
ggplot(mydata, aes(x = Fertility)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "grey", binwidth = 5, ylab = "Density") +
geom_density(alpha = .2, fill = "lightgrey") +
geom_vline(aes(xintercept = mean(Fertility)),
color = "red", linetype = "dashed", size = 1) +
labs(title = "Fertility histogram plot", xlab = "Fertility", ylab = "Density")
boxplot(mydata, ylab = "Frequency", main = "Boxplot of the Swiss Fertility data set")
Fertility
?hrbrthemes
??hrbrthemes
install.packages("hrbrthemes")
library(hrbrthemes)
install.packages("viridis")
library(viridis)
play_data <- data.frame(
name=c( rep("A",500), rep("B",500), rep("B",500), rep("C",20), rep('D', 100)  ),
value=c( rnorm(500, 10, 5), rnorm(500, 13, 1), rnorm(500, 18, 1), rnorm(20, 25, 4), rnorm(100, 12, 1) )
)
play_data
ggplot_data_frame = data.frame(
name = c(rep("Fertility", 47), rep("Agriculture", 47), rep("Examiniation", 47), rep("Education", 47), rep("Catholic", 47), rep("Infant.Mortality", 47))
)
ggplot_data_frame
ggplot_data_frame = data.frame(
name = c(rep("Fertility", 47), rep("Agriculture", 47), rep("Examiniation", 47), rep("Education", 47), rep("Catholic", 47), rep("Infant.Mortality", 47)),
value = c(as.vector(mydata$Fertility), as.vector(mydata$Agriculture), as.vector(mydata$Examination), as.vector(mydata$Education), as.vector(mydata$Catholic), as.vector(mydata$Infant.Mortality))
)
ggplot_data_frame
ggplot_data_frame = data.frame(
name = c(rep("Fertility", 47), rep("Agriculture", 47), rep("Examiniation", 47), rep("Education", 47), rep("Catholic", 47), rep("Infant.Mortality", 47)),
value = c(as.vector(mydata$Fertility), as.vector(mydata$Agriculture), as.vector(mydata$Examination), as.vector(mydata$Education), as.vector(mydata$Catholic), as.vector(mydata$Infant.Mortality))
)
# Jitter Boxplot #
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
geom_jitter(color = "black", size = 0.4, alpha = 0.9) +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Jitter boxplot of Swiss dataset") +
xlab("")
boxplot(mydata, ylab = "Frequency", main = "Boxplot of the Swiss Fertility data set")
ggplot_data_frame$name = factor(ggplot_data_frame$name, levels = c("Fertility", "Agriculture", "Examniation", "Education", "Catholic", "Infant.Mortality"))
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
geom_jitter(color = "black", size = 0.4, alpha = 0.9) +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Jitter boxplot of Swiss dataset") +
xlab("")
ggplot_data_frame$name = factor(ggplot_data_frame$name, levels = c("Fertility", "Agriculture", "Examination", "Education", "Catholic", "Infant.Mortality"))
# Jitter Boxplot #
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
geom_jitter(color = "black", size = 0.4, alpha = 0.9) +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Jitter boxplot of Swiss dataset") +
xlab("")
ggplot_data_frame = data.frame(
name = c(rep("Fertility", 47), rep("Agriculture", 47), rep("Examination", 47), rep("Education", 47), rep("Catholic", 47), rep("Infant.Mortality", 47)),
value = c(as.vector(mydata$Fertility), as.vector(mydata$Agriculture), as.vector(mydata$Examination), as.vector(mydata$Education), as.vector(mydata$Catholic), as.vector(mydata$Infant.Mortality))
)
ggplot_data_frame$name = factor(ggplot_data_frame$name, levels = c("Fertility", "Agriculture", "Examination", "Education", "Catholic", "Infant.Mortality"))
# Jitter Boxplot #
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
geom_jitter(color = "black", size = 0.4, alpha = 0.9) +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Jitter boxplot of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
geom_jitter(color = "black", size = 0.7, alpha = 0.9) +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Jitter boxplot of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
geom_jitter(color = "red", size = 0.7, alpha = 0.9) +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Jitter boxplot of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
geom_jitter(color = "black", size = 0.7, alpha = 0.9) +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Jitter boxplot of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_violin() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Violin chart of Swiss dataset") +
xlab("")
ggplot(mydata, aes(x = Fertility)) +
geom_histogram(aes(y = ..density..), colour = "black", fill = "grey", binwidth = 5) +
geom_density(alpha = .2, fill = "lightgrey") +
geom_vline(aes(xintercept = mean(Fertility)),
color = "red", linetype = "dashed", size = 1) +
labs(title = "Fertility histogram plot", xlab = "Fertility", ylab = "Density")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_violin() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Violin chart of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
geom_jitter(color = "black", size = 0.7, alpha = 0.9) +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Jitter boxplot of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_violin() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Violin chart of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
geom_jitter(color = "black", size = 0.7, alpha = 0.9) +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Jitter boxplot of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_violin() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Violin chart of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
geom_jitter(color = "black", size = 0.7, alpha = 0.9) +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Jitter boxplot of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_violin() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Violin chart of Swiss dataset") +
xlab("")
# Violin plot #
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name,colour=NA)) +
geom_violin() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Violin chart of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name,colour=NA)) +
geom_violin() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Violin chart of Swiss dataset") +
xlab("")
# Violin plot #
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_violin(colour=NA) +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Violin chart of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_boxplot(colour=NA) +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
geom_jitter(color = "black", size = 0.7, alpha = 0.9) +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Jitter boxplot of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
geom_jitter(color = "black", size = 0.7, alpha = 0.9) +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Jitter boxplot of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_violin() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Violin chart of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_boxplot() +
geom_violin() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
geom_jitter(color = "black", size = 0.7, alpha = 0.9) +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Jitter boxplot of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
geom_jitter(color = "black", size = 0.7, alpha = 0.9) +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Jitter boxplot of Swiss dataset") +
xlab("")
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_violin() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Violin chart of Swiss dataset") +
xlab("")
ggpairs(mydata, upper = list(continuos = wrap("cor", size = 12)))
ggcorrplot(cor(mydata), hc.order = TRUE, # another way of visualizing the correlation matrix
type = "lower",
digits = 3,
lab = TRUE,
lab_size = 4,
method = "square",
colors = c("tomato2", "white", "springgreen3"),
title = "Correlogram Swiss Data Set",
ggtheme = theme_bw)
ggplot_data_frame%>%
ggplot(aes(x = name, y = value, fill = name)) +
geom_violin() +
scale_fill_viridis(discrete = TRUE, alpha = 0.6, option = "A") +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11)
) +
ggtitle("Violin chart of Swiss dataset") +
xlab("")
ggcorrplot(cor(mydata), hc.order = TRUE, # another way of visualizing the correlation matrix
type = "lower",
digits = 3,
lab = TRUE,
lab_size = 4,
method = "square",
colors = c("tomato2", "white", "springgreen3"),
title = "Correlogram Swiss Data Set",
ggtheme = theme_bw)
levelplot(cor(mydata), xlab = "", ylab = "") # visible correlation between Fertility and Education & Examination. Also, highly negative correlation between Education and Agriculture
