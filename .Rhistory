median(Fertility)
abline(v=c(mean(Fertility), median(Fertility)), col = "red") #positive skew given that the mean
abline(v=c(68, mean(Fertility), median(Fertility)), col="gray94") # a little bit right skewed, mode is defined visually, check visually with hist if more data is on the right side
abline(v=c(mean(Fertility), median(Fertility)), col = "red") #negative skew given that the mean (70.14) is left of the median (70.4); mode does not make sense in my opinion given we have no value twice
cov(mydata)
cor(mydata) # correlations with response variable lower than .8.
require(lattice)
levelplot(cor(mydata), xlab = "", ylab = "")
pairs(mydata, upper.panel = NULL, pch=20,cex=1.25) # assumption: linear relationship between education and examination/examination and agriculture
#
cor_matrix <- as.matrix(cor(mydata)) # correlations with response variable lower than .8.
cor_matrix[upper.tri(cor_matrix)] <- NA
print(cor_matrix, na.print = "")
cor_matrix <- as.matrix(cor(mydata)) # correlations with response variable lower than .8.
cor_matrix[upper.tri(cor_matrix)] <- NA
print(cor_matrix, na.print = "", digits = 7)
cor_matrix <- as.matrix(cor(mydata)) # correlations with response variable lower than .8.
cor_matrix[upper.tri(cor_matrix)] <- NA
print(cor_matrix, na.print = "", digits = 4)
cor_matrix <- as.matrix(cor(mydata)) # correlations with response variable lower than .8.
cor_matrix
cor_matrix <- as.matrix(cor(mydata)) # correlations with response variable lower than .8.
cor_matrix[upper.tri(cor_matrix)] <- NA
print(cor_matrix, na.print = "")
help(swiss)
mydata %>%
dplyr::select(Fertility) %>%
arrange(desc(Fertility)) %>%
head(10)
mydata %>%
dplyr::select(Fertility) %>%
arrange(desc(Fertility)) %>%
tail(10) # Cities: Geneve, Lausanne, Nyone
mydata %>%
dplyr::select(Education) %>%
arrange(desc(Education)) %>%
head(10) # Geneve 53 (outlier)
mydata %>%
dplyr::select(Education) %>%
arrange(desc(Education)) %>%
tail(10)
ggplot(mydata, aes(x = Education, y = Fertility)) +
geom_bin2d() +
theme_bw()
mydata %>%
ggplot() +
geom_point(mapping = aes(x = Agriculture, y = Fertility)) +
geom_smooth(mapping = aes(x = Agriculture, y = Fertility),
method = "lm")
mydata %>%
ggplot() +
geom_point(mapping = aes(x = Examination, y = Fertility)) +
geom_smooth(mapping = aes(x = Examination, y = Fertility),
method = "lm")
mydata %>%
ggplot() +
xlab("Examination") +
ylab("Fertility") +
geom_point(mapping = aes(
x = Examination,
y = Fertility,
color = Examination,
size = Fertility,
alpha = 0.5)) +
geom_smooth(mapping = aes(
x = Examination,
y = Fertility),
method = "lm")
mydata %>%
ggplot() +
geom_point(mapping = aes(x = Education, y = Fertility)) +
geom_smooth(mapping = aes(x = Education, y = Fertility),
method = "lm") +
ylim(0, 100)
mydata %>%
ggplot() +
xlab("Education") +
ylab("Fertility") +
geom_point(mapping = aes(
x = Education,
y = Fertility,
color = Education,
size = Fertility,
alpha = 0.5)) +
geom_smooth(mapping = aes(
x = Education,
y = Fertility),
method = "lm")
plot(y = Fertility, ylab = "Fertility", ylim = c(0,100), x = Education, xlab = "Education",
main = "Swiss Fertility and Education Indicators", pch = 19, col="black")
simple.regression_FertilityEdcuation <- lm(Fertility ~ Education, data = swiss)
abline(simple.regression_FertilityEdcuation, col = "red")
plot(x = Education, xlab = "Education", y = Fertility, ylab = "Fertility", ylim = c(0,100),
main = "Swiss Fertility and Education Indicators", pch = 19, col="black")
abline(simple.regression_FertilityEdcuation, col = "red")
mydata %>%
ggplot() +
geom_point(mapping = aes(x = Agriculture, y = Fertility)) +
geom_smooth(mapping = aes(x = Agriculture, y = Fertility),
method = "lm")
mydata %>%
ggplot() +
geom_point(mapping = aes(x = Education, y = Fertility)) +
geom_smooth(mapping = aes(x = Education, y = Fertility),
method = "lm") +
ylim(0, 100)
mydata %>%
ggplot() +
xlab("Education") +
ylab("Fertility") +
geom_point(mapping = aes(
x = Education,
y = Fertility,
color = Education,
size = Fertility,
alpha = 0.5)) +
geom_smooth(mapping = aes(
x = Education,
y = Fertility),
method = "lm")
mydata %>%
ggplot() +
xlab("Education") +
ylab("Fertility") +
geom_point(mapping = aes(
x = Education,
y = Fertility,
color = Education,
size = Fertility,
alpha = 0.5)) +
geom_smooth(mapping = aes(
x = Education,
y = Fertility),
method = "lm") +
ylim(0, 100)
mydata %>%
ggplot() +
xlab("Agriculture") +
ylab("Examination") +
geom_point(mapping = aes(
x = Agriculture,
y = Examination,
color = Fertility,
size = Fertility,
alpha = 0.5)) +
geom_smooth(mapping = aes(
x = Agriculture,
y = Examination),
method = "lm")
mydata %>%
ggplot() +
xlab("Agriculture") +
ylab("Education") +
geom_point(mapping = aes(
x = Agriculture,
y = Education,
color = Fertility,
size = Fertility,
alpha = 0.5)) +
geom_smooth(mapping = aes(
x = Agriculture,
y = Education),
method = "lm")
ggplot(mydata, aes(x = Education, y = Fertility)) +
geom_bin2d() +
theme_bw()
fit = fitted(reg_simple)
plot(mydata$Education, mydata$Fertility)
lines(mydata$Education, fit, col = 2)
resi_simple = reg_simple$residuals
plot(mydata$Education, resi_simple)
lines(mydata$Education, rep(0, times = length(mydata$Education)), col = 2) # there should be no pattern, is there a pattern?
reg_simple <- lm(Fertility ~ Education, data = mydata)
summary(reg_simple)
resi_simple = reg_simple$residuals
plot(mydata$Education, resi_simple)
lines(mydata$Education, rep(0, times = length(mydata$Education)), col = 2) # there should be no pattern, is there a pattern?
reg_simple <- lm(Fertility ~ Education, data = mydata)
summary(reg_simple)
fit = fitted(reg_simple)
plot(mydata$Education, mydata$Fertility)
lines(mydata$Education, fit, col = 2)
fit = fitted(reg_simple)
plot(mydata$Education, mydata$Fertility, main = "Fertility and Education Regression", xlab = "Education", ylab = "Fertility") + ylim(0,100)
lines(mydata$Education, fit, col = 2)
fit = fitted(reg_simple)
plot(Education, Fertility, main = "Fertility and Education Regression", xlab = "Education", ylab = "Fertility")
lines(Education, fit, col = 2)
mydata %>%
ggplot() +
geom_point(mapping = aes(x = Education, y = Fertility)) +
geom_smooth(mapping = aes(x = Education, y = Fertility),
method = "lm") +
ylim(0, 100)
mydata %>%
ggplot() +
geom_point(mapping = aes(x = Education, y = Fertility)) +
geom_smooth(mapping = aes(x = Education, y = Fertility),
method = "lm") +
ylim(0, 100) + main = "Fertility and Education Regression"
mydata %>%
ggplot(main = "Fertility and Education Regression") +
geom_point(mapping = aes(x = Education, y = Fertility)) +
geom_smooth(mapping = aes(x = Education, y = Fertility),
method = "lm") +
ylim(0, 100)
mydata %>%
ggplot() +
geom_point(mapping = aes(x = Education, y = Fertility)) +
geom_smooth(mapping = aes(x = Education, y = Fertility),
method = "lm") +
ylim(0, 100)
fit = fitted(reg_simple)
plot(Education, Fertility, main = "Fertility and Education Regression", xlab = "Education", ylab = "Fertility")
lines(Education, fit, col = 2)
mydata %>%
ggplot() +
geom_point(mapping = aes(x = Education, y = Fertility)) +
geom_smooth(mapping = aes(x = Education, y = Fertility),
method = "lm") +
ylim(0, 100)
mydata %>%
ggplot() +
xlab("Education") +
ylab("Fertility") +
geom_point(mapping = aes(
x = Education,
y = Fertility,
color = Education,
size = Fertility,
alpha = 0.5)) +
geom_smooth(mapping = aes(
x = Education,
y = Fertility),
method = "lm") +
ylim(0, 100)
mydata %>%
ggplot() +
xlab("Education") +
ylab("Fertility") +
main("Fertility and Education Regression")
geom_point(mapping = aes(
x = Education,
y = Fertility,
color = Education,
size = Fertility,
alpha = 0.5)) +
geom_smooth(mapping = aes(
x = Education,
y = Fertility),
method = "lm") +
ylim(0, 100)
mydata %>%
ggplot() +
ggtitle("Fertility and Education Regression")
xlab("Education") +
ylab("Fertility") +
main("Fertility and Education Regression")
geom_point(mapping = aes(
x = Education,
y = Fertility,
color = Education,
size = Fertility,
alpha = 0.5)) +
geom_smooth(mapping = aes(
x = Education,
y = Fertility),
method = "lm") +
ylim(0, 100)
mydata %>%
ggplot() +
ggtitle("Fertility and Education Regression") +
xlab("Education") +
ylab("Fertility") +
main("Fertility and Education Regression")
geom_point(mapping = aes(
x = Education,
y = Fertility,
color = Education,
size = Fertility,
alpha = 0.5)) +
geom_smooth(mapping = aes(
x = Education,
y = Fertility),
method = "lm") +
ylim(0, 100)
mydata %>%
ggplot() +
xlab("Education") +
ylab("Fertility") +
main("Fertility and Education Regression")
geom_point(mapping = aes(
x = Education,
y = Fertility,
color = Education,
size = Fertility,
alpha = 0.5)) +
geom_smooth(mapping = aes(
x = Education,
y = Fertility),
method = "lm") +
ylim(0, 100)
mydata %>%
ggplot() +
xlab("Education") +
ylab("Fertility") +
main("Fertility and Education Regression")
geom_point(mapping = aes(
x = Education,
y = Fertility,
color = Education,
size = Fertility,
alpha = 0.5)) +
geom_smooth(mapping = aes(
x = Education,
y = Fertility),
method = "lm") +
ylim(0, 100)
mydata %>%
ggplot() +
xlab("Education") +
ylab("Fertility") +
geom_point(mapping = aes(
x = Education,
y = Fertility,
color = Education,
size = Fertility,
alpha = 0.5)) +
geom_smooth(mapping = aes(
x = Education,
y = Fertility),
method = "lm") +
ylim(0, 100)
mydata %>%
ggplot() +
ggtitle("Fertility and Education Regression") +
xlab("Education") +
ylab("Fertility") +
geom_point(mapping = aes(
x = Education,
y = Fertility,
color = Education,
size = Fertility,
alpha = 0.5)) +
geom_smooth(mapping = aes(
x = Education,
y = Fertility),
method = "lm") +
ylim(0, 100)
ith a more complex model ##
mydata %>%
ggplot() +
ggtitle("Fertility and Education Regression")
geom_point(mapping = aes(x = Education, y = Fertility)) +
geom_smooth(mapping = aes(x = Education, y = Fertility),
method = "lm") +
ylim(0, 100)
a more complex model ##
mydata %>%
ggplot() +
ggtitle("Fertility and Education Regression") +
geom_point(mapping = aes(x = Education, y = Fertility)) +
geom_smooth(mapping = aes(x = Education, y = Fertility),
method = "lm") +
ylim(0, 100)
resi_simple = reg_simple$residuals
plot(mydata$Education, resi_simple)
lines(mydata$Education, rep(0, times = length(mydata$Education)), col = 2) # there should be no pattern, is there a pattern?
resi_simple = reg_simple$residuals
plot(mydata$Education, resi_simple, main = "Residuals from the linear regression (Fertility ~ Education)", xlab = "Education", ylab = "Residuals")
lines(mydata$Education, rep(0, times = length(mydata$Education)), col = 2) # there should be no pattern, is there a pattern?
# Plot
plot(reg_simple) # Normal QQ, Residuals vs. Leverage, Scale Location
lines(mydata$Education, rep(0, times = length(mydata$Education)), col = 2) # no clear pattern can be observed in the residuals (can only be said for lower levels of Education given amount of datapoints)
resi_simple = reg_simple$residuals
plot(mydata$Education, resi_simple, main = "Residuals from the linear regression (Fertility ~ Education)", xlab = "Education", ylab = "Residuals")
lines(mydata$Education, rep(0, times = length(mydata$Education)), col = 2) # no clear pattern can be observed in the residuals (can only be said for lower levels of Education given amount of datapoints)
plot(reg_simple) # Normal QQ, Residuals vs. Leverage, Scale Location
plot(mydata$Education, resi_simple, main = "Residuals from the linear regression (Fertility ~ Education)", xlab = "Education", ylab = "Residuals")
lines(mydata$Education, rep(0, times = length(mydata$Education)), col = 2) # no clear pattern can be observed in the residuals (can only be said for lower levels of Education given amount of datapoints)
qqnorm(resi_simple)
qqline(resi_simple)
plot(reg_simple) # Normal QQ, Residuals vs. Leverage, Scale Location
plot(density(simple_linear_residuals), main = "Residuals for the Simple Linear Regression Model")
simple_linear <- lm(Fertility ~ Education, data = swiss)
simple_linear_residuals <- resid(simple_linear)
plot(density(simple_linear_residuals), main = "Residuals for the Simple Linear Regression Model")
plot(density(resi_simple), main = "Residuals for the Simple Linear Regression Model")
library(lmtest)
library(lmtest)
bptest(reg_simple)
library(lmtest)
bptest(simple_linear)
Education2 = Education^2
Education3 = Education^3
reg_simple2 <- lm(Fertility ~ Education + Education2)
reg_simple2 <- lm(Fertility ~ Education + Education2)
reg_simple3 <- lm(Fertility ~ Education + Education2 + Education3)
reg_simple2 <- lm(Fertility ~ Education + Education2)
reg_simple3 <- lm(Fertility ~ Education + Education2 + Education3)
print(reg_simple2)
print(reg_simple3)
summary(reg_simple2)
summary(reg_simple3)
simple_quadratic <- lm(Fertility ~ Education  + Education2, data = swiss)
simple_cubic <- lm(Fertility ~ Education + Education2 + Education3, data = swiss)
summary(simple_quadratic)
summary(simple_cubic)
fit_matrix <- matrix(NA, nrow = 3, ncol = 2)
colnames(fit_matrix) <- c("R sq.", "Adj. R sq.")
rownames(fit_matrix) <- c("Linear", "Quadratic", "Cubic")
fit_matrix[1,1] <- summary(reg_simple)$r.squared
fit_matrix[1,2] <- summary(reg_simple)$adj.r.squared
fit_matrix[2,1] <- summary(reg_simple2)$r.squared
fit_matrix[2,2] <- summary(reg_simple2)$adj.r.squared
fit_matrix[3,1] <- summary(reg_simple3)$r.squared
fit_matrix[3,2] <- summary(reg_simple3)$adj.r.squared
fit_matrix
plot(Education, reg_simple2$fitted);
lines(Education, reg_simple$fitted, col = "red") # if they are similar, the model should be linear, if the deviation is small the linear model is not wrong
plot(Education, reg_simple3$fitted.values, col = "green", ylab = "Fitted Values", main = "Comparison of Value Fit for Polynomial Regression")
points(Education, reg_simple2$fitted.values, col = "black")
lines(Education, reg_simple$fitted.values, col = "red")
plot(Education, reg_simple2$fitted);
lines(Education, reg_simple$fitted, col = "red") # if they are similar, the model should be linear, if the deviation is small the linear model is not wrong
plot(Education, reg_simple3$fitted.values, col = "green", ylab = "Fitted Values", main = "Comparison of Value Fit for Polynomial Regression")
points(Education, reg_simple2$fitted.values, col = "black")
lines(Education, reg_simple$fitted.values, col = "red")
bandwith <- npregbw(Fertility ~ Education)
summary(bandwith)
npreg1 <- npreg(bws = bandwidth)
bandwidth <- npregbw(Fertility ~ Education)
summary(bandwidth) # the optimal bandwidth is 6.76351
# We then estimate the function using the optimal bandwidth
npreg1 <- npreg(bws = bandwidth)
plot(bandwith, plot.errors.method = "bootstrap")
lines(Education, simple_linear$fitted.values, col = "red")
plot(bandwith, plot.errors.method = "bootstrap", main = "Non-parametric regression")
lines(Education, simple_linear$fitted.values, col = "red")
k <- 9
sigma_simple <- vector(length = k)
sigma_simple2 <- vector(length = k)
sigma_simple3 <- vector(length = k)
for(i in 1:k){
ind <- rep(0, times = 47)
a <- (i - 1) * 5 + 1
b <- i * 5
ind[a : b] = 1
Test.F = swiss$Fertility[ind == 1]
Test.E = swiss$Education[ind == 1]
Train.F = swiss$Fertility[ind == 0]
Train.E = swiss$Education[ind == 0]
# Defining the test sets
Train.E2 = Train.E^2
Train.E3 = Train.E^3
#Fitting the training data
reg_linear <- lm(Train.F ~ Train.E)
reg_quadratic <- lm(Train.F ~ Train.E + Train.E2)
reg_cubic <- lm(Train.F ~ Train.E + Train.E2 + Train.E3)
#Extract the fitted values
coef.1 <- reg_linear$coef
coef.2 <- reg_quadratic$coef
coef.3 <- reg_cubic$coef
#Calculate SSR on dataset
sigma_simple[i] <- sum((Test.F - coef.1[1] - coef.1[2] * Test.E)^2)
sigma_simple2[i] <- sum((Test.F - coef.2[1] - coef.2[2] * Test.E - coef.2[3] * (Test.E^2))^2)
sigma_simple3[i] <- sum((Test.F - coef.3[1] - coef.3[2] * Test.E - coef.3[3] * (Test.E^2) - coef.3[4] * (Test.E^3))^2)
}
# Average SSR for all three models
avg_sigma_simple <- mean(sigma_simple)
avg_sigma_simple2 <- mean(sigma_simple2)
avg_sigma_simple3 <- mean(sigma_simple3)
avg_sigma_simple
avg_sigma_simple2
avg_sigma_simple3
# Creating a matrix so store the values
cross_validation_matrix <- matrix(NA, nrow = 3, ncol = 1)
colnames(cross_validation_matrix) <- c("Average SSR")
rownames(cross_validation_matrix) <- c("Linear", "Quadratic", "Cubic")
cross_validation_matrix[1] <- avg_sigma_simple
cross_validation_matrix[2] <- avg_sigma_simple2
cross_validation_matrix[3] <- avg_sigma_simple3
cross_validation_matrix
resettest(reg_simple, power = 2:3, type = "regressor")
plot(Fertility ~ Education, data = mydata, col = "grey", pch = 20, main = "Simple Model")
fit_1 = lm(Fertility ~ Education, data = mydata)
abline(fit_1, col = "green", lwd = 3)
plot(fitted(fit_1), resid(fit_1), col = "grey", pch = 20,
xlab = "Fitted", ylab = "Residuals", main = "Simple Model: fitted vs. resiudals")
abline(h = 0, col = "darkorange", lwd = 2)
install.packages("lmtest")
library(lmtest)
bptest(fit_1) # large p value we dont reject h0 of homoscedasticity --> all good!
install.packages("lmtest")
bptest(fit_1) # large p value we dont reject h0 of homoscedasticity --> all good!
qqnorm(resid(fit_1), main = "Normal Q-Q Plot, fit_1", col = "darkgrey")
qqline(resid(fit_1), col = "dodgerblue", lwd = 2)
shapiro.test(resid(fit_1))
par(mfrow = c(2,2))
plot(reg_simple)
model_eva <- leaps::regsubsets(Fertility ~ ., data = mydata, nbest = 2) # number of best models per number of included variables
print(summary(model_eva))
print(summary(model_eva)$which)
par(mfrow = c(1, 2))
plot(model_eva) #the lower the bic the better the model best model includes agriculture, education, catholic and infant mortality
plot(model_eva, scale = "adjr2") # highest adj r2 all iv, second highest adjr2 includes all ivs except examination
### Diagnostics ###
par(mfrow = c(2,2))
plot(Reg_full)
# Plot 1: Residual plot, no pattern observed constant variance assumption holds
# Plot 2: Normal Q-Q plot, normality assumption holds
# Plot 3: some influential points
